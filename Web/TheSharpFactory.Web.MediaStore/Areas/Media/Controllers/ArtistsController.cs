using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using TheSharpFactory.Entity.MainDb.Media;
using TheSharpFactory.Repository.Container.Interfaces;

namespace TheSharpFactory.Web.Areas.Media.Controllers
{
    [Area("Media")]
    public class ArtistsController : Controller
    {
        //reference to the repository generated by The Sharp Factory
        private readonly IRepositoryContainer _repository;

        public ArtistsController(IRepositoryContainer repository)
        {
            _repository = repository;
        }

        // GET: ArtistsController
        public ActionResult Index()
        {
            var model = _repository.MainDb.Media.Artist.ToList();

            return View(model);
        }

        // GET: ArtistsController/Details/5
        public ActionResult Details(int id)
        {
            var model = _repository.MainDb.Media.Artist.ByPK(id);

            return View(model);
        }

        // GET: ArtistsController/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: ArtistsController/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(Artist artist)
        {
            _repository.MainDb.Media.Artist.Create(artist);

            return RedirectToAction(nameof(Index));
        }

        // GET: ArtistsController/Edit/5
        public ActionResult Edit(int id)
        {
            var model = _repository.MainDb.Media.Artist.ByPK(id);

            return View(model);
        }

        // POST: ArtistsController/Edit/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(Artist artist)
        {
            _repository.MainDb.Media.Artist.Update(artist);

            var model = _repository.MainDb.Media.Artist.ByPK(artist.ArtistId);

            //return View(model);
            return RedirectToAction(nameof(Index));
        }

        // GET: ArtistsController/Delete/5
        public ActionResult Delete(int id)
        {
            var model = _repository.MainDb.Media.Artist.ByPK(id);

            return View(model);
        }

        // POST: ArtistsController/Delete/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Delete(Artist artist)
        {
            _repository.MainDb.Media.Artist.Delete(artist);

            return RedirectToAction(nameof(Index));
        }
    }
}
