/*SFF*/
/************************************************
This class has been generated dynamically.
Any changes you make here will be overwritten.
To add your own code create a partial class
in a sepparate file.
with the following declaration:

namespace TheSharpFactory.Repository.Common
{
    public static partial class RepoLookup
    {
    }
}

************************************************/

using System;
using System.Data;
using System.Collections.Generic;
using MainDbE = TheSharpFactory.Entity.MainDb;

namespace TheSharpFactory.Repository.Common
{

    /// <summary>
    /// This class contains constants and infrastructure information for the functioning of the Repository classes and Repository Base Classes.
    /// </summary>
    public static partial class RepoLookup
    {
        #region ModelId

        /// <summary>
        /// This class contains Model Id's.
        /// </summary>
        public static class ModelId
        {
            public static readonly int MainDb = 1;
        }
        #endregion
        #region EntityId

        /// <summary>
        /// This class contains Entity Id's.
        /// </summary>
        public static class EntityId
        {
            public static readonly int MainDb_Accounting_Invoice = 1;
            public static readonly int MainDb_Accounting_InvoiceLine = 2;
            public static readonly int MainDb_Accounting_OrderDetail = 3;
            public static readonly int MainDb_Media_Album = 4;
            public static readonly int MainDb_Media_Artist = 5;
            public static readonly int MainDb_Media_Genre = 6;
            public static readonly int MainDb_Media_MediaType = 7;
            public static readonly int MainDb_Media_Playlist = 8;
            public static readonly int MainDb_Media_PlaylistTrack = 9;
            public static readonly int MainDb_Media_Track = 10;
            public static readonly int MainDb_People_Customer = 11;
            public static readonly int MainDb_People_Employee = 12;
        }
        #endregion
        #region StoredProcId

        /// <summary>
        /// This class contains StoredProc Id's.
        /// </summary>
        public static class StoredProcId
        {
            public static readonly int MainDb_Accounting_CheckInvoice = 1;
            public static readonly int MainDb_Accounting_CheckInvoiceLine = 2;
            public static readonly int MainDb_Accounting_DeleteInvoice = 3;
            public static readonly int MainDb_Accounting_DeleteInvoiceLine = 4;
            public static readonly int MainDb_Accounting_GetAllInvoiceLines = 5;
            public static readonly int MainDb_Accounting_GetAllInvoices = 6;
            public static readonly int MainDb_Accounting_GetInvoice = 7;
            public static readonly int MainDb_Accounting_GetInvoiceLine = 8;
            public static readonly int MainDb_Accounting_GetInvoiceLinesByInvoice = 9;
            public static readonly int MainDb_Accounting_GetInvoiceLinesByTrack = 10;
            public static readonly int MainDb_Accounting_GetInvoicesByCustomer = 11;
            public static readonly int MainDb_Accounting_GetInvoicesByEmployee = 12;
            public static readonly int MainDb_Accounting_InsertInvoice = 13;
            public static readonly int MainDb_Accounting_InsertInvoiceLine = 14;
            public static readonly int MainDb_Accounting_UpdateInvoice = 15;
            public static readonly int MainDb_Accounting_UpdateInvoiceLine = 16;
            public static readonly int MainDb_Media_CheckAlbum = 17;
            public static readonly int MainDb_Media_CheckArtist = 18;
            public static readonly int MainDb_Media_CheckGenre = 19;
            public static readonly int MainDb_Media_CheckMediaType = 20;
            public static readonly int MainDb_Media_CheckPlaylist = 21;
            public static readonly int MainDb_Media_CheckPlaylistTrack = 22;
            public static readonly int MainDb_Media_CheckTrack = 23;
            public static readonly int MainDb_Media_DeleteAlbum = 24;
            public static readonly int MainDb_Media_DeleteArtist = 25;
            public static readonly int MainDb_Media_DeleteGenre = 26;
            public static readonly int MainDb_Media_DeleteMediaType = 27;
            public static readonly int MainDb_Media_DeletePlaylist = 28;
            public static readonly int MainDb_Media_DeletePlaylistTrack = 29;
            public static readonly int MainDb_Media_DeleteTrack = 30;
            public static readonly int MainDb_Media_GetAlbum = 31;
            public static readonly int MainDb_Media_GetAlbumsByArtist = 32;
            public static readonly int MainDb_Media_GetAllAlbums = 33;
            public static readonly int MainDb_Media_GetAllArtists = 34;
            public static readonly int MainDb_Media_GetAllGenres = 35;
            public static readonly int MainDb_Media_GetAllMediaTypes = 36;
            public static readonly int MainDb_Media_GetAllPlaylists = 37;
            public static readonly int MainDb_Media_GetAllPlaylistTracks = 38;
            public static readonly int MainDb_Media_GetAllTracks = 39;
            public static readonly int MainDb_Media_GetArtist = 40;
            public static readonly int MainDb_Media_GetGenre = 41;
            public static readonly int MainDb_Media_GetMediaType = 42;
            public static readonly int MainDb_Media_GetPlaylist = 43;
            public static readonly int MainDb_Media_GetPlaylistsByTrack = 44;
            public static readonly int MainDb_Media_GetPlaylistTrack = 45;
            public static readonly int MainDb_Media_GetTrack = 46;
            public static readonly int MainDb_Media_GetTracksByAlbum = 47;
            public static readonly int MainDb_Media_GetTracksByArtist = 48;
            public static readonly int MainDb_Media_GetTracksByGenre = 49;
            public static readonly int MainDb_Media_GetTracksByInvoice = 50;
            public static readonly int MainDb_Media_GetTracksByMediaType = 51;
            public static readonly int MainDb_Media_GetTracksByPlaylist = 52;
            public static readonly int MainDb_Media_InsertAlbum = 53;
            public static readonly int MainDb_Media_InsertArtist = 54;
            public static readonly int MainDb_Media_InsertGenre = 55;
            public static readonly int MainDb_Media_InsertMediaType = 56;
            public static readonly int MainDb_Media_InsertPlaylist = 57;
            public static readonly int MainDb_Media_InsertPlaylistTrack = 58;
            public static readonly int MainDb_Media_InsertTrack = 59;
            public static readonly int MainDb_Media_UpdateAlbum = 60;
            public static readonly int MainDb_Media_UpdateArtist = 61;
            public static readonly int MainDb_Media_UpdateGenre = 62;
            public static readonly int MainDb_Media_UpdateMediaType = 63;
            public static readonly int MainDb_Media_UpdatePlaylist = 64;
            public static readonly int MainDb_Media_UpdatePlaylistTrack = 65;
            public static readonly int MainDb_Media_UpdateTrack = 66;
            public static readonly int MainDb_People_CheckCustomer = 67;
            public static readonly int MainDb_People_CheckEmployee = 68;
            public static readonly int MainDb_People_DeleteCustomer = 69;
            public static readonly int MainDb_People_DeleteEmployee = 70;
            public static readonly int MainDb_People_GetAllCustomers = 71;
            public static readonly int MainDb_People_GetAllEmployees = 72;
            public static readonly int MainDb_People_GetCustomer = 73;
            public static readonly int MainDb_People_GetCustomersBySupportRep = 74;
            public static readonly int MainDb_People_GetEmployee = 75;
            public static readonly int MainDb_People_GetEmployeeReportsTo = 76;
            public static readonly int MainDb_People_GetEmployeesByReportsTo = 77;
            public static readonly int MainDb_People_InsertCustomer = 78;
            public static readonly int MainDb_People_InsertEmployee = 79;
            public static readonly int MainDb_People_UpdateCustomer = 80;
            public static readonly int MainDb_People_UpdateEmployee = 81;
        }
        #endregion
        #region FunctionId

        /// <summary>
        /// This class contains Function Id's.
        /// </summary>
        public static class FunctionId
        {
        }
        #endregion
        #region SequenceId

        /// <summary>
        /// This class contains Sequence Id's.
        /// </summary>
        public static class SequenceId
        {
        }
        #endregion
        #region Entities And Views
        //this is the info necesary for Sql query composition. It is public so the repositories can interact with each other.
        public static readonly Dictionary<int, EntityInfo> Entities = new Dictionary<int, EntityInfo>(12)
        {
            {EntityId.MainDb_Accounting_Invoice, new EntityInfo{DbFQName = "[Accounting].[Invoice]", Alias = "[A0]", AsAlias = "[Accounting].[Invoice] AS [A0]", Projection = "[A0].[InvoiceId],[A0].[CustomerId],[A0].[InvoiceDate],[A0].[BillingAddress],[A0].[BillingCity],[A0].[BillingState],[A0].[BillingCountry],[A0].[BillingPostalCode],[A0].[Total]", InsertProjection = "[CustomerId],[InvoiceDate],[BillingAddress],[BillingCity],[BillingState],[BillingCountry],[BillingPostalCode],[Total]", InsertedProjection = "[INSERTED].[InvoiceId],[INSERTED].[CustomerId],[INSERTED].[InvoiceDate],[INSERTED].[BillingAddress],[INSERTED].[BillingCity],[INSERTED].[BillingState],[INSERTED].[BillingCountry],[INSERTED].[BillingPostalCode],[INSERTED].[Total]", DeletedProjection = "[DELETED].[InvoiceId],[DELETED].[CustomerId],[DELETED].[InvoiceDate],[DELETED].[BillingAddress],[DELETED].[BillingCity],[DELETED].[BillingState],[DELETED].[BillingCountry],[DELETED].[BillingPostalCode],[DELETED].[Total]", Props = new Dictionary<int, PropertyInfo>(9){{(int)MainDbE.Accounting.InvoiceProperty.InvoiceId, new PropertyInfo{Column = "[InvoiceId]", Alias = "[A0].[InvoiceId]", ParamName = "@A0_InvoiceId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.InvoiceProperty.CustomerId, new PropertyInfo{Column = "[CustomerId]", Alias = "[A0].[CustomerId]", ParamName = "@A0_CustomerId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.InvoiceProperty.InvoiceDate, new PropertyInfo{Column = "[InvoiceDate]", Alias = "[A0].[InvoiceDate]", ParamName = "@A0_InvoiceDate", SqlType = SqlDbType.DateTime, Size = null,}},{(int)MainDbE.Accounting.InvoiceProperty.BillingAddress, new PropertyInfo{Column = "[BillingAddress]", Alias = "[A0].[BillingAddress]", ParamName = "@A0_BillingAddress", SqlType = SqlDbType.NVarChar, Size = 70,}},{(int)MainDbE.Accounting.InvoiceProperty.BillingCity, new PropertyInfo{Column = "[BillingCity]", Alias = "[A0].[BillingCity]", ParamName = "@A0_BillingCity", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.Accounting.InvoiceProperty.BillingState, new PropertyInfo{Column = "[BillingState]", Alias = "[A0].[BillingState]", ParamName = "@A0_BillingState", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.Accounting.InvoiceProperty.BillingCountry, new PropertyInfo{Column = "[BillingCountry]", Alias = "[A0].[BillingCountry]", ParamName = "@A0_BillingCountry", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.Accounting.InvoiceProperty.BillingPostalCode, new PropertyInfo{Column = "[BillingPostalCode]", Alias = "[A0].[BillingPostalCode]", ParamName = "@A0_BillingPostalCode", SqlType = SqlDbType.NVarChar, Size = 10,}},{(int)MainDbE.Accounting.InvoiceProperty.Total, new PropertyInfo{Column = "[Total]", Alias = "[A0].[Total]", ParamName = "@A0_Total", SqlType = SqlDbType.Decimal, Size = null,}},},}},
            {EntityId.MainDb_Accounting_InvoiceLine, new EntityInfo{DbFQName = "[Accounting].[InvoiceLine]", Alias = "[A1]", AsAlias = "[Accounting].[InvoiceLine] AS [A1]", Projection = "[A1].[InvoiceLineId],[A1].[InvoiceId],[A1].[TrackId],[A1].[UnitPrice],[A1].[Quantity]", InsertProjection = "[InvoiceId],[TrackId],[UnitPrice],[Quantity]", InsertedProjection = "[INSERTED].[InvoiceLineId],[INSERTED].[InvoiceId],[INSERTED].[TrackId],[INSERTED].[UnitPrice],[INSERTED].[Quantity]", DeletedProjection = "[DELETED].[InvoiceLineId],[DELETED].[InvoiceId],[DELETED].[TrackId],[DELETED].[UnitPrice],[DELETED].[Quantity]", Props = new Dictionary<int, PropertyInfo>(5){{(int)MainDbE.Accounting.InvoiceLineProperty.InvoiceLineId, new PropertyInfo{Column = "[InvoiceLineId]", Alias = "[A1].[InvoiceLineId]", ParamName = "@A1_InvoiceLineId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.InvoiceLineProperty.InvoiceId, new PropertyInfo{Column = "[InvoiceId]", Alias = "[A1].[InvoiceId]", ParamName = "@A1_InvoiceId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.InvoiceLineProperty.TrackId, new PropertyInfo{Column = "[TrackId]", Alias = "[A1].[TrackId]", ParamName = "@A1_TrackId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.InvoiceLineProperty.UnitPrice, new PropertyInfo{Column = "[UnitPrice]", Alias = "[A1].[UnitPrice]", ParamName = "@A1_UnitPrice", SqlType = SqlDbType.Decimal, Size = null,}},{(int)MainDbE.Accounting.InvoiceLineProperty.Quantity, new PropertyInfo{Column = "[Quantity]", Alias = "[A1].[Quantity]", ParamName = "@A1_Quantity", SqlType = SqlDbType.Int, Size = null,}},},}},
            {EntityId.MainDb_Accounting_OrderDetail, new EntityInfo{DbFQName = "[Accounting].[OrderDetail]", Alias = "[A2]", AsAlias = "[Accounting].[OrderDetail] AS [A2]", Projection = "[A2].[Id],[A2].[SubId],[A2].[Name]", InsertProjection = "[SubId],[Name]", InsertedProjection = "[INSERTED].[Id],[INSERTED].[SubId],[INSERTED].[Name]", DeletedProjection = "[DELETED].[Id],[DELETED].[SubId],[DELETED].[Name]", Props = new Dictionary<int, PropertyInfo>(3){{(int)MainDbE.Accounting.OrderDetailProperty.Id, new PropertyInfo{Column = "[Id]", Alias = "[A2].[Id]", ParamName = "@A2_Id", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.OrderDetailProperty.SubId, new PropertyInfo{Column = "[SubId]", Alias = "[A2].[SubId]", ParamName = "@A2_SubId", SqlType = SqlDbType.VarChar, Size = 50,}},{(int)MainDbE.Accounting.OrderDetailProperty.Name, new PropertyInfo{Column = "[Name]", Alias = "[A2].[Name]", ParamName = "@A2_Name", SqlType = SqlDbType.VarChar, Size = 25,}},},}},
            {EntityId.MainDb_Media_Album, new EntityInfo{DbFQName = "[Media].[Album]", Alias = "[A3]", AsAlias = "[Media].[Album] AS [A3]", Projection = "[A3].[AlbumId],[A3].[Title],[A3].[ArtistId]", InsertProjection = "[Title],[ArtistId]", InsertedProjection = "[INSERTED].[AlbumId],[INSERTED].[Title],[INSERTED].[ArtistId]", DeletedProjection = "[DELETED].[AlbumId],[DELETED].[Title],[DELETED].[ArtistId]", Props = new Dictionary<int, PropertyInfo>(3){{(int)MainDbE.Media.AlbumProperty.AlbumId, new PropertyInfo{Column = "[AlbumId]", Alias = "[A3].[AlbumId]", ParamName = "@A3_AlbumId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.AlbumProperty.Title, new PropertyInfo{Column = "[Title]", Alias = "[A3].[Title]", ParamName = "@A3_Title", SqlType = SqlDbType.NVarChar, Size = 160,}},{(int)MainDbE.Media.AlbumProperty.ArtistId, new PropertyInfo{Column = "[ArtistId]", Alias = "[A3].[ArtistId]", ParamName = "@A3_ArtistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {EntityId.MainDb_Media_Artist, new EntityInfo{DbFQName = "[Media].[Artist]", Alias = "[A4]", AsAlias = "[Media].[Artist] AS [A4]", Projection = "[A4].[ArtistId],[A4].[Name]", InsertProjection = "[Name]", InsertedProjection = "[INSERTED].[ArtistId],[INSERTED].[Name]", DeletedProjection = "[DELETED].[ArtistId],[DELETED].[Name]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.ArtistProperty.ArtistId, new PropertyInfo{Column = "[ArtistId]", Alias = "[A4].[ArtistId]", ParamName = "@A4_ArtistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.ArtistProperty.Name, new PropertyInfo{Column = "[Name]", Alias = "[A4].[Name]", ParamName = "@A4_Name", SqlType = SqlDbType.NVarChar, Size = 120,}},},}},
            {EntityId.MainDb_Media_Genre, new EntityInfo{DbFQName = "[Media].[Genre]", Alias = "[A5]", AsAlias = "[Media].[Genre] AS [A5]", Projection = "[A5].[GenreId],[A5].[Name]", InsertProjection = "[Name]", InsertedProjection = "[INSERTED].[GenreId],[INSERTED].[Name]", DeletedProjection = "[DELETED].[GenreId],[DELETED].[Name]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.GenreProperty.GenreId, new PropertyInfo{Column = "[GenreId]", Alias = "[A5].[GenreId]", ParamName = "@A5_GenreId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.GenreProperty.Name, new PropertyInfo{Column = "[Name]", Alias = "[A5].[Name]", ParamName = "@A5_Name", SqlType = SqlDbType.NVarChar, Size = 120,}},},}},
            {EntityId.MainDb_Media_MediaType, new EntityInfo{DbFQName = "[Media].[MediaType]", Alias = "[A6]", AsAlias = "[Media].[MediaType] AS [A6]", Projection = "[A6].[MediaTypeId],[A6].[Name]", InsertProjection = "[Name]", InsertedProjection = "[INSERTED].[MediaTypeId],[INSERTED].[Name]", DeletedProjection = "[DELETED].[MediaTypeId],[DELETED].[Name]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.MediaTypeProperty.MediaTypeId, new PropertyInfo{Column = "[MediaTypeId]", Alias = "[A6].[MediaTypeId]", ParamName = "@A6_MediaTypeId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.MediaTypeProperty.Name, new PropertyInfo{Column = "[Name]", Alias = "[A6].[Name]", ParamName = "@A6_Name", SqlType = SqlDbType.NVarChar, Size = 120,}},},}},
            {EntityId.MainDb_Media_Playlist, new EntityInfo{DbFQName = "[Media].[Playlist]", Alias = "[A7]", AsAlias = "[Media].[Playlist] AS [A7]", Projection = "[A7].[PlaylistId],[A7].[Name]", InsertProjection = "[Name]", InsertedProjection = "[INSERTED].[PlaylistId],[INSERTED].[Name]", DeletedProjection = "[DELETED].[PlaylistId],[DELETED].[Name]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.PlaylistProperty.PlaylistId, new PropertyInfo{Column = "[PlaylistId]", Alias = "[A7].[PlaylistId]", ParamName = "@A7_PlaylistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.PlaylistProperty.Name, new PropertyInfo{Column = "[Name]", Alias = "[A7].[Name]", ParamName = "@A7_Name", SqlType = SqlDbType.NVarChar, Size = 120,}},},}},
            {EntityId.MainDb_Media_PlaylistTrack, new EntityInfo{DbFQName = "[Media].[PlaylistTrack]", Alias = "[A8]", AsAlias = "[Media].[PlaylistTrack] AS [A8]", Projection = "[A8].[PlaylistId],[A8].[TrackId]", InsertProjection = "[PlaylistId],[TrackId]", InsertedProjection = "[INSERTED].[PlaylistId],[INSERTED].[TrackId]", DeletedProjection = "[DELETED].[PlaylistId],[DELETED].[TrackId]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.PlaylistTrackProperty.PlaylistId, new PropertyInfo{Column = "[PlaylistId]", Alias = "[A8].[PlaylistId]", ParamName = "@A8_PlaylistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.PlaylistTrackProperty.TrackId, new PropertyInfo{Column = "[TrackId]", Alias = "[A8].[TrackId]", ParamName = "@A8_TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {EntityId.MainDb_Media_Track, new EntityInfo{DbFQName = "[Media].[Track]", Alias = "[A9]", AsAlias = "[Media].[Track] AS [A9]", Projection = "[A9].[TrackId],[A9].[Name],[A9].[AlbumId],[A9].[MediaTypeId],[A9].[GenreId],[A9].[Composer],[A9].[Milliseconds],[A9].[Bytes],[A9].[UnitPrice]", InsertProjection = "[Name],[AlbumId],[MediaTypeId],[GenreId],[Composer],[Milliseconds],[Bytes],[UnitPrice]", InsertedProjection = "[INSERTED].[TrackId],[INSERTED].[Name],[INSERTED].[AlbumId],[INSERTED].[MediaTypeId],[INSERTED].[GenreId],[INSERTED].[Composer],[INSERTED].[Milliseconds],[INSERTED].[Bytes],[INSERTED].[UnitPrice]", DeletedProjection = "[DELETED].[TrackId],[DELETED].[Name],[DELETED].[AlbumId],[DELETED].[MediaTypeId],[DELETED].[GenreId],[DELETED].[Composer],[DELETED].[Milliseconds],[DELETED].[Bytes],[DELETED].[UnitPrice]", Props = new Dictionary<int, PropertyInfo>(9){{(int)MainDbE.Media.TrackProperty.TrackId, new PropertyInfo{Column = "[TrackId]", Alias = "[A9].[TrackId]", ParamName = "@A9_TrackId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.TrackProperty.Name, new PropertyInfo{Column = "[Name]", Alias = "[A9].[Name]", ParamName = "@A9_Name", SqlType = SqlDbType.NVarChar, Size = 200,}},{(int)MainDbE.Media.TrackProperty.AlbumId, new PropertyInfo{Column = "[AlbumId]", Alias = "[A9].[AlbumId]", ParamName = "@A9_AlbumId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.TrackProperty.MediaTypeId, new PropertyInfo{Column = "[MediaTypeId]", Alias = "[A9].[MediaTypeId]", ParamName = "@A9_MediaTypeId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.TrackProperty.GenreId, new PropertyInfo{Column = "[GenreId]", Alias = "[A9].[GenreId]", ParamName = "@A9_GenreId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.TrackProperty.Composer, new PropertyInfo{Column = "[Composer]", Alias = "[A9].[Composer]", ParamName = "@A9_Composer", SqlType = SqlDbType.NVarChar, Size = 220,}},{(int)MainDbE.Media.TrackProperty.Milliseconds, new PropertyInfo{Column = "[Milliseconds]", Alias = "[A9].[Milliseconds]", ParamName = "@A9_Milliseconds", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.TrackProperty.Bytes, new PropertyInfo{Column = "[Bytes]", Alias = "[A9].[Bytes]", ParamName = "@A9_Bytes", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.TrackProperty.UnitPrice, new PropertyInfo{Column = "[UnitPrice]", Alias = "[A9].[UnitPrice]", ParamName = "@A9_UnitPrice", SqlType = SqlDbType.Decimal, Size = null,}},},}},
            {EntityId.MainDb_People_Customer, new EntityInfo{DbFQName = "[People].[Customer]", Alias = "[B0]", AsAlias = "[People].[Customer] AS [B0]", Projection = "[B0].[CustomerId],[B0].[FirstName],[B0].[LastName],[B0].[Company],[B0].[Address],[B0].[City],[B0].[State],[B0].[Country],[B0].[PostalCode],[B0].[Phone],[B0].[Fax],[B0].[Email],[B0].[SupportRepId]", InsertProjection = "[FirstName],[LastName],[Company],[Address],[City],[State],[Country],[PostalCode],[Phone],[Fax],[Email],[SupportRepId]", InsertedProjection = "[INSERTED].[CustomerId],[INSERTED].[FirstName],[INSERTED].[LastName],[INSERTED].[Company],[INSERTED].[Address],[INSERTED].[City],[INSERTED].[State],[INSERTED].[Country],[INSERTED].[PostalCode],[INSERTED].[Phone],[INSERTED].[Fax],[INSERTED].[Email],[INSERTED].[SupportRepId]", DeletedProjection = "[DELETED].[CustomerId],[DELETED].[FirstName],[DELETED].[LastName],[DELETED].[Company],[DELETED].[Address],[DELETED].[City],[DELETED].[State],[DELETED].[Country],[DELETED].[PostalCode],[DELETED].[Phone],[DELETED].[Fax],[DELETED].[Email],[DELETED].[SupportRepId]", Props = new Dictionary<int, PropertyInfo>(13){{(int)MainDbE.People.CustomerProperty.CustomerId, new PropertyInfo{Column = "[CustomerId]", Alias = "[B0].[CustomerId]", ParamName = "@B0_CustomerId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.People.CustomerProperty.FirstName, new PropertyInfo{Column = "[FirstName]", Alias = "[B0].[FirstName]", ParamName = "@B0_FirstName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.CustomerProperty.LastName, new PropertyInfo{Column = "[LastName]", Alias = "[B0].[LastName]", ParamName = "@B0_LastName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.CustomerProperty.Company, new PropertyInfo{Column = "[Company]", Alias = "[B0].[Company]", ParamName = "@B0_Company", SqlType = SqlDbType.NVarChar, Size = 80,}},{(int)MainDbE.People.CustomerProperty.Address, new PropertyInfo{Column = "[Address]", Alias = "[B0].[Address]", ParamName = "@B0_Address", SqlType = SqlDbType.NVarChar, Size = 70,}},{(int)MainDbE.People.CustomerProperty.City, new PropertyInfo{Column = "[City]", Alias = "[B0].[City]", ParamName = "@B0_City", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.CustomerProperty.State, new PropertyInfo{Column = "[State]", Alias = "[B0].[State]", ParamName = "@B0_State", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.CustomerProperty.Country, new PropertyInfo{Column = "[Country]", Alias = "[B0].[Country]", ParamName = "@B0_Country", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.CustomerProperty.PostalCode, new PropertyInfo{Column = "[PostalCode]", Alias = "[B0].[PostalCode]", ParamName = "@B0_PostalCode", SqlType = SqlDbType.NVarChar, Size = 10,}},{(int)MainDbE.People.CustomerProperty.Phone, new PropertyInfo{Column = "[Phone]", Alias = "[B0].[Phone]", ParamName = "@B0_Phone", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.CustomerProperty.Fax, new PropertyInfo{Column = "[Fax]", Alias = "[B0].[Fax]", ParamName = "@B0_Fax", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.CustomerProperty.Email, new PropertyInfo{Column = "[Email]", Alias = "[B0].[Email]", ParamName = "@B0_Email", SqlType = SqlDbType.NVarChar, Size = 60,}},{(int)MainDbE.People.CustomerProperty.SupportRepId, new PropertyInfo{Column = "[SupportRepId]", Alias = "[B0].[SupportRepId]", ParamName = "@B0_SupportRepId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {EntityId.MainDb_People_Employee, new EntityInfo{DbFQName = "[People].[Employee]", Alias = "[B1]", AsAlias = "[People].[Employee] AS [B1]", Projection = "[B1].[EmployeeId],[B1].[LastName],[B1].[FirstName],[B1].[Title],[B1].[ReportsTo],[B1].[BirthDate],[B1].[HireDate],[B1].[Address],[B1].[City],[B1].[State],[B1].[Country],[B1].[PostalCode],[B1].[Phone],[B1].[Fax],[B1].[Email]", InsertProjection = "[LastName],[FirstName],[Title],[ReportsTo],[BirthDate],[HireDate],[Address],[City],[State],[Country],[PostalCode],[Phone],[Fax],[Email]", InsertedProjection = "[INSERTED].[EmployeeId],[INSERTED].[LastName],[INSERTED].[FirstName],[INSERTED].[Title],[INSERTED].[ReportsTo],[INSERTED].[BirthDate],[INSERTED].[HireDate],[INSERTED].[Address],[INSERTED].[City],[INSERTED].[State],[INSERTED].[Country],[INSERTED].[PostalCode],[INSERTED].[Phone],[INSERTED].[Fax],[INSERTED].[Email]", DeletedProjection = "[DELETED].[EmployeeId],[DELETED].[LastName],[DELETED].[FirstName],[DELETED].[Title],[DELETED].[ReportsTo],[DELETED].[BirthDate],[DELETED].[HireDate],[DELETED].[Address],[DELETED].[City],[DELETED].[State],[DELETED].[Country],[DELETED].[PostalCode],[DELETED].[Phone],[DELETED].[Fax],[DELETED].[Email]", Props = new Dictionary<int, PropertyInfo>(15){{(int)MainDbE.People.EmployeeProperty.EmployeeId, new PropertyInfo{Column = "[EmployeeId]", Alias = "[B1].[EmployeeId]", ParamName = "@B1_EmployeeId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.People.EmployeeProperty.LastName, new PropertyInfo{Column = "[LastName]", Alias = "[B1].[LastName]", ParamName = "@B1_LastName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.EmployeeProperty.FirstName, new PropertyInfo{Column = "[FirstName]", Alias = "[B1].[FirstName]", ParamName = "@B1_FirstName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.EmployeeProperty.Title, new PropertyInfo{Column = "[Title]", Alias = "[B1].[Title]", ParamName = "@B1_Title", SqlType = SqlDbType.NVarChar, Size = 30,}},{(int)MainDbE.People.EmployeeProperty.ReportsTo, new PropertyInfo{Column = "[ReportsTo]", Alias = "[B1].[ReportsTo]", ParamName = "@B1_ReportsTo", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.People.EmployeeProperty.BirthDate, new PropertyInfo{Column = "[BirthDate]", Alias = "[B1].[BirthDate]", ParamName = "@B1_BirthDate", SqlType = SqlDbType.DateTime, Size = null,}},{(int)MainDbE.People.EmployeeProperty.HireDate, new PropertyInfo{Column = "[HireDate]", Alias = "[B1].[HireDate]", ParamName = "@B1_HireDate", SqlType = SqlDbType.DateTime, Size = null,}},{(int)MainDbE.People.EmployeeProperty.Address, new PropertyInfo{Column = "[Address]", Alias = "[B1].[Address]", ParamName = "@B1_Address", SqlType = SqlDbType.NVarChar, Size = 70,}},{(int)MainDbE.People.EmployeeProperty.City, new PropertyInfo{Column = "[City]", Alias = "[B1].[City]", ParamName = "@B1_City", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.EmployeeProperty.State, new PropertyInfo{Column = "[State]", Alias = "[B1].[State]", ParamName = "@B1_State", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.EmployeeProperty.Country, new PropertyInfo{Column = "[Country]", Alias = "[B1].[Country]", ParamName = "@B1_Country", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.EmployeeProperty.PostalCode, new PropertyInfo{Column = "[PostalCode]", Alias = "[B1].[PostalCode]", ParamName = "@B1_PostalCode", SqlType = SqlDbType.NVarChar, Size = 10,}},{(int)MainDbE.People.EmployeeProperty.Phone, new PropertyInfo{Column = "[Phone]", Alias = "[B1].[Phone]", ParamName = "@B1_Phone", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.EmployeeProperty.Fax, new PropertyInfo{Column = "[Fax]", Alias = "[B1].[Fax]", ParamName = "@B1_Fax", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.EmployeeProperty.Email, new PropertyInfo{Column = "[Email]", Alias = "[B1].[Email]", ParamName = "@B1_Email", SqlType = SqlDbType.NVarChar, Size = 60,}},},}},
        };
        #endregion
        #region StoredProcs
        //this is the info necesary for Sql query composition. It is public so the repositories can interact with each other.
        public static readonly Dictionary<int, EntityInfo> StoredProcs = new Dictionary<int, EntityInfo>(81)
        {
            {StoredProcId.MainDb_Accounting_CheckInvoice, new EntityInfo{DbFQName = "[Accounting].[CheckInvoice]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.CheckInvoice_RequestProperty.InvoiceId, new PropertyInfo{ ParamName = "@InvoiceId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_CheckInvoiceLine, new EntityInfo{DbFQName = "[Accounting].[CheckInvoiceLine]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.CheckInvoiceLine_RequestProperty.InvoiceLineId, new PropertyInfo{ ParamName = "@InvoiceLineId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_DeleteInvoice, new EntityInfo{DbFQName = "[Accounting].[DeleteInvoice]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.DeleteInvoice_RequestProperty.InvoiceId, new PropertyInfo{ ParamName = "@InvoiceId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_DeleteInvoiceLine, new EntityInfo{DbFQName = "[Accounting].[DeleteInvoiceLine]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.DeleteInvoiceLine_RequestProperty.InvoiceLineId, new PropertyInfo{ ParamName = "@InvoiceLineId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_GetAllInvoiceLines, new EntityInfo{DbFQName = "[Accounting].[GetAllInvoiceLines]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_Accounting_GetAllInvoices, new EntityInfo{DbFQName = "[Accounting].[GetAllInvoices]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_Accounting_GetInvoice, new EntityInfo{DbFQName = "[Accounting].[GetInvoice]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.GetInvoice_RequestProperty.InvoiceId, new PropertyInfo{ ParamName = "@InvoiceId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_GetInvoiceLine, new EntityInfo{DbFQName = "[Accounting].[GetInvoiceLine]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.GetInvoiceLine_RequestProperty.InvoiceLineId, new PropertyInfo{ ParamName = "@InvoiceLineId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_GetInvoiceLinesByInvoice, new EntityInfo{DbFQName = "[Accounting].[GetInvoiceLinesByInvoice]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.GetInvoiceLinesByInvoice_RequestProperty.InvoiceId, new PropertyInfo{ ParamName = "@InvoiceId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_GetInvoiceLinesByTrack, new EntityInfo{DbFQName = "[Accounting].[GetInvoiceLinesByTrack]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.GetInvoiceLinesByTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_GetInvoicesByCustomer, new EntityInfo{DbFQName = "[Accounting].[GetInvoicesByCustomer]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.GetInvoicesByCustomer_RequestProperty.CustomerId, new PropertyInfo{ ParamName = "@CustomerId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_GetInvoicesByEmployee, new EntityInfo{DbFQName = "[Accounting].[GetInvoicesByEmployee]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Accounting.GetInvoicesByEmployee_RequestProperty.EmployeeId, new PropertyInfo{ ParamName = "@EmployeeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_InsertInvoice, new EntityInfo{DbFQName = "[Accounting].[InsertInvoice]", Props = new Dictionary<int, PropertyInfo>(9){{(int)MainDbE.Accounting.InsertInvoice_RequestProperty.CustomerId, new PropertyInfo{ ParamName = "@CustomerId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.InsertInvoice_RequestProperty.InvoiceDate, new PropertyInfo{ ParamName = "@InvoiceDate", SqlType = SqlDbType.DateTime, Size = null,}},{(int)MainDbE.Accounting.InsertInvoice_RequestProperty.BillingAddress, new PropertyInfo{ ParamName = "@BillingAddress", SqlType = SqlDbType.NVarChar, Size = 70,}},{(int)MainDbE.Accounting.InsertInvoice_RequestProperty.BillingCity, new PropertyInfo{ ParamName = "@BillingCity", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.Accounting.InsertInvoice_RequestProperty.BillingState, new PropertyInfo{ ParamName = "@BillingState", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.Accounting.InsertInvoice_RequestProperty.BillingCountry, new PropertyInfo{ ParamName = "@BillingCountry", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.Accounting.InsertInvoice_RequestProperty.BillingPostalCode, new PropertyInfo{ ParamName = "@BillingPostalCode", SqlType = SqlDbType.NVarChar, Size = 10,}},{(int)MainDbE.Accounting.InsertInvoice_RequestProperty.Total, new PropertyInfo{ ParamName = "@Total", SqlType = SqlDbType.Decimal, Size = null,}},{(int)MainDbE.Accounting.InsertInvoice_RequestProperty.InvoiceId, new PropertyInfo{ ParamName = "@InvoiceId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_Accounting_InsertInvoiceLine, new EntityInfo{DbFQName = "[Accounting].[InsertInvoiceLine]", Props = new Dictionary<int, PropertyInfo>(5){{(int)MainDbE.Accounting.InsertInvoiceLine_RequestProperty.InvoiceId, new PropertyInfo{ ParamName = "@InvoiceId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.InsertInvoiceLine_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.InsertInvoiceLine_RequestProperty.UnitPrice, new PropertyInfo{ ParamName = "@UnitPrice", SqlType = SqlDbType.Decimal, Size = null,}},{(int)MainDbE.Accounting.InsertInvoiceLine_RequestProperty.Quantity, new PropertyInfo{ ParamName = "@Quantity", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.InsertInvoiceLine_RequestProperty.InvoiceLineId, new PropertyInfo{ ParamName = "@InvoiceLineId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_Accounting_UpdateInvoice, new EntityInfo{DbFQName = "[Accounting].[UpdateInvoice]", Props = new Dictionary<int, PropertyInfo>(9){{(int)MainDbE.Accounting.UpdateInvoice_RequestProperty.InvoiceId, new PropertyInfo{ ParamName = "@InvoiceId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.UpdateInvoice_RequestProperty.CustomerId, new PropertyInfo{ ParamName = "@CustomerId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.UpdateInvoice_RequestProperty.InvoiceDate, new PropertyInfo{ ParamName = "@InvoiceDate", SqlType = SqlDbType.DateTime, Size = null,}},{(int)MainDbE.Accounting.UpdateInvoice_RequestProperty.BillingAddress, new PropertyInfo{ ParamName = "@BillingAddress", SqlType = SqlDbType.NVarChar, Size = 70,}},{(int)MainDbE.Accounting.UpdateInvoice_RequestProperty.BillingCity, new PropertyInfo{ ParamName = "@BillingCity", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.Accounting.UpdateInvoice_RequestProperty.BillingState, new PropertyInfo{ ParamName = "@BillingState", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.Accounting.UpdateInvoice_RequestProperty.BillingCountry, new PropertyInfo{ ParamName = "@BillingCountry", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.Accounting.UpdateInvoice_RequestProperty.BillingPostalCode, new PropertyInfo{ ParamName = "@BillingPostalCode", SqlType = SqlDbType.NVarChar, Size = 10,}},{(int)MainDbE.Accounting.UpdateInvoice_RequestProperty.Total, new PropertyInfo{ ParamName = "@Total", SqlType = SqlDbType.Decimal, Size = null,}},},}},
            {StoredProcId.MainDb_Accounting_UpdateInvoiceLine, new EntityInfo{DbFQName = "[Accounting].[UpdateInvoiceLine]", Props = new Dictionary<int, PropertyInfo>(5){{(int)MainDbE.Accounting.UpdateInvoiceLine_RequestProperty.InvoiceLineId, new PropertyInfo{ ParamName = "@InvoiceLineId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.UpdateInvoiceLine_RequestProperty.InvoiceId, new PropertyInfo{ ParamName = "@InvoiceId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.UpdateInvoiceLine_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Accounting.UpdateInvoiceLine_RequestProperty.UnitPrice, new PropertyInfo{ ParamName = "@UnitPrice", SqlType = SqlDbType.Decimal, Size = null,}},{(int)MainDbE.Accounting.UpdateInvoiceLine_RequestProperty.Quantity, new PropertyInfo{ ParamName = "@Quantity", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_CheckAlbum, new EntityInfo{DbFQName = "[Media].[CheckAlbum]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.CheckAlbum_RequestProperty.AlbumId, new PropertyInfo{ ParamName = "@AlbumId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_CheckArtist, new EntityInfo{DbFQName = "[Media].[CheckArtist]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.CheckArtist_RequestProperty.ArtistId, new PropertyInfo{ ParamName = "@ArtistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_CheckGenre, new EntityInfo{DbFQName = "[Media].[CheckGenre]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.CheckGenre_RequestProperty.GenreId, new PropertyInfo{ ParamName = "@GenreId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_CheckMediaType, new EntityInfo{DbFQName = "[Media].[CheckMediaType]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.CheckMediaType_RequestProperty.MediaTypeId, new PropertyInfo{ ParamName = "@MediaTypeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_CheckPlaylist, new EntityInfo{DbFQName = "[Media].[CheckPlaylist]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.CheckPlaylist_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_CheckPlaylistTrack, new EntityInfo{DbFQName = "[Media].[CheckPlaylistTrack]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.CheckPlaylistTrack_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.CheckPlaylistTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_CheckTrack, new EntityInfo{DbFQName = "[Media].[CheckTrack]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.CheckTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_DeleteAlbum, new EntityInfo{DbFQName = "[Media].[DeleteAlbum]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.DeleteAlbum_RequestProperty.AlbumId, new PropertyInfo{ ParamName = "@AlbumId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_DeleteArtist, new EntityInfo{DbFQName = "[Media].[DeleteArtist]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.DeleteArtist_RequestProperty.ArtistId, new PropertyInfo{ ParamName = "@ArtistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_DeleteGenre, new EntityInfo{DbFQName = "[Media].[DeleteGenre]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.DeleteGenre_RequestProperty.GenreId, new PropertyInfo{ ParamName = "@GenreId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_DeleteMediaType, new EntityInfo{DbFQName = "[Media].[DeleteMediaType]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.DeleteMediaType_RequestProperty.MediaTypeId, new PropertyInfo{ ParamName = "@MediaTypeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_DeletePlaylist, new EntityInfo{DbFQName = "[Media].[DeletePlaylist]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.DeletePlaylist_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_DeletePlaylistTrack, new EntityInfo{DbFQName = "[Media].[DeletePlaylistTrack]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.DeletePlaylistTrack_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.DeletePlaylistTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_DeleteTrack, new EntityInfo{DbFQName = "[Media].[DeleteTrack]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.DeleteTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetAlbum, new EntityInfo{DbFQName = "[Media].[GetAlbum]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetAlbum_RequestProperty.AlbumId, new PropertyInfo{ ParamName = "@AlbumId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetAlbumsByArtist, new EntityInfo{DbFQName = "[Media].[GetAlbumsByArtist]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetAlbumsByArtist_RequestProperty.ArtistId, new PropertyInfo{ ParamName = "@ArtistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetAllAlbums, new EntityInfo{DbFQName = "[Media].[GetAllAlbums]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_Media_GetAllArtists, new EntityInfo{DbFQName = "[Media].[GetAllArtists]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_Media_GetAllGenres, new EntityInfo{DbFQName = "[Media].[GetAllGenres]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_Media_GetAllMediaTypes, new EntityInfo{DbFQName = "[Media].[GetAllMediaTypes]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_Media_GetAllPlaylists, new EntityInfo{DbFQName = "[Media].[GetAllPlaylists]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_Media_GetAllPlaylistTracks, new EntityInfo{DbFQName = "[Media].[GetAllPlaylistTracks]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_Media_GetAllTracks, new EntityInfo{DbFQName = "[Media].[GetAllTracks]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_Media_GetArtist, new EntityInfo{DbFQName = "[Media].[GetArtist]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetArtist_RequestProperty.ArtistId, new PropertyInfo{ ParamName = "@ArtistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetGenre, new EntityInfo{DbFQName = "[Media].[GetGenre]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetGenre_RequestProperty.GenreId, new PropertyInfo{ ParamName = "@GenreId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetMediaType, new EntityInfo{DbFQName = "[Media].[GetMediaType]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetMediaType_RequestProperty.MediaTypeId, new PropertyInfo{ ParamName = "@MediaTypeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetPlaylist, new EntityInfo{DbFQName = "[Media].[GetPlaylist]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetPlaylist_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetPlaylistsByTrack, new EntityInfo{DbFQName = "[Media].[GetPlaylistsByTrack]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetPlaylistsByTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetPlaylistTrack, new EntityInfo{DbFQName = "[Media].[GetPlaylistTrack]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.GetPlaylistTrack_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.GetPlaylistTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetTrack, new EntityInfo{DbFQName = "[Media].[GetTrack]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetTracksByAlbum, new EntityInfo{DbFQName = "[Media].[GetTracksByAlbum]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetTracksByAlbum_RequestProperty.AlbumId, new PropertyInfo{ ParamName = "@AlbumId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetTracksByArtist, new EntityInfo{DbFQName = "[Media].[GetTracksByArtist]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetTracksByArtist_RequestProperty.ArtistId, new PropertyInfo{ ParamName = "@ArtistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetTracksByGenre, new EntityInfo{DbFQName = "[Media].[GetTracksByGenre]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetTracksByGenre_RequestProperty.GenreId, new PropertyInfo{ ParamName = "@GenreId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetTracksByInvoice, new EntityInfo{DbFQName = "[Media].[GetTracksByInvoice]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetTracksByInvoice_RequestProperty.InvoiceId, new PropertyInfo{ ParamName = "@InvoiceId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetTracksByMediaType, new EntityInfo{DbFQName = "[Media].[GetTracksByMediaType]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetTracksByMediaType_RequestProperty.MediaTypeId, new PropertyInfo{ ParamName = "@MediaTypeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_GetTracksByPlaylist, new EntityInfo{DbFQName = "[Media].[GetTracksByPlaylist]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.Media.GetTracksByPlaylist_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_InsertAlbum, new EntityInfo{DbFQName = "[Media].[InsertAlbum]", Props = new Dictionary<int, PropertyInfo>(3){{(int)MainDbE.Media.InsertAlbum_RequestProperty.Title, new PropertyInfo{ ParamName = "@Title", SqlType = SqlDbType.NVarChar, Size = 160,}},{(int)MainDbE.Media.InsertAlbum_RequestProperty.ArtistId, new PropertyInfo{ ParamName = "@ArtistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.InsertAlbum_RequestProperty.AlbumId, new PropertyInfo{ ParamName = "@AlbumId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_Media_InsertArtist, new EntityInfo{DbFQName = "[Media].[InsertArtist]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.InsertArtist_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 120,}},{(int)MainDbE.Media.InsertArtist_RequestProperty.ArtistId, new PropertyInfo{ ParamName = "@ArtistId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_Media_InsertGenre, new EntityInfo{DbFQName = "[Media].[InsertGenre]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.InsertGenre_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 120,}},{(int)MainDbE.Media.InsertGenre_RequestProperty.GenreId, new PropertyInfo{ ParamName = "@GenreId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_Media_InsertMediaType, new EntityInfo{DbFQName = "[Media].[InsertMediaType]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.InsertMediaType_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 120,}},{(int)MainDbE.Media.InsertMediaType_RequestProperty.MediaTypeId, new PropertyInfo{ ParamName = "@MediaTypeId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_Media_InsertPlaylist, new EntityInfo{DbFQName = "[Media].[InsertPlaylist]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.InsertPlaylist_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 120,}},{(int)MainDbE.Media.InsertPlaylist_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_Media_InsertPlaylistTrack, new EntityInfo{DbFQName = "[Media].[InsertPlaylistTrack]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.InsertPlaylistTrack_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.InsertPlaylistTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_InsertTrack, new EntityInfo{DbFQName = "[Media].[InsertTrack]", Props = new Dictionary<int, PropertyInfo>(9){{(int)MainDbE.Media.InsertTrack_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 200,}},{(int)MainDbE.Media.InsertTrack_RequestProperty.AlbumId, new PropertyInfo{ ParamName = "@AlbumId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.InsertTrack_RequestProperty.MediaTypeId, new PropertyInfo{ ParamName = "@MediaTypeId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.InsertTrack_RequestProperty.GenreId, new PropertyInfo{ ParamName = "@GenreId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.InsertTrack_RequestProperty.Composer, new PropertyInfo{ ParamName = "@Composer", SqlType = SqlDbType.NVarChar, Size = 220,}},{(int)MainDbE.Media.InsertTrack_RequestProperty.Milliseconds, new PropertyInfo{ ParamName = "@Milliseconds", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.InsertTrack_RequestProperty.Bytes, new PropertyInfo{ ParamName = "@Bytes", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.InsertTrack_RequestProperty.UnitPrice, new PropertyInfo{ ParamName = "@UnitPrice", SqlType = SqlDbType.Decimal, Size = null,}},{(int)MainDbE.Media.InsertTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_Media_UpdateAlbum, new EntityInfo{DbFQName = "[Media].[UpdateAlbum]", Props = new Dictionary<int, PropertyInfo>(3){{(int)MainDbE.Media.UpdateAlbum_RequestProperty.AlbumId, new PropertyInfo{ ParamName = "@AlbumId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateAlbum_RequestProperty.Title, new PropertyInfo{ ParamName = "@Title", SqlType = SqlDbType.NVarChar, Size = 160,}},{(int)MainDbE.Media.UpdateAlbum_RequestProperty.ArtistId, new PropertyInfo{ ParamName = "@ArtistId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_UpdateArtist, new EntityInfo{DbFQName = "[Media].[UpdateArtist]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.UpdateArtist_RequestProperty.ArtistId, new PropertyInfo{ ParamName = "@ArtistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateArtist_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 120,}},},}},
            {StoredProcId.MainDb_Media_UpdateGenre, new EntityInfo{DbFQName = "[Media].[UpdateGenre]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.UpdateGenre_RequestProperty.GenreId, new PropertyInfo{ ParamName = "@GenreId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateGenre_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 120,}},},}},
            {StoredProcId.MainDb_Media_UpdateMediaType, new EntityInfo{DbFQName = "[Media].[UpdateMediaType]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.UpdateMediaType_RequestProperty.MediaTypeId, new PropertyInfo{ ParamName = "@MediaTypeId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateMediaType_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 120,}},},}},
            {StoredProcId.MainDb_Media_UpdatePlaylist, new EntityInfo{DbFQName = "[Media].[UpdatePlaylist]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.UpdatePlaylist_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdatePlaylist_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 120,}},},}},
            {StoredProcId.MainDb_Media_UpdatePlaylistTrack, new EntityInfo{DbFQName = "[Media].[UpdatePlaylistTrack]", Props = new Dictionary<int, PropertyInfo>(2){{(int)MainDbE.Media.UpdatePlaylistTrack_RequestProperty.PlaylistId, new PropertyInfo{ ParamName = "@PlaylistId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdatePlaylistTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_Media_UpdateTrack, new EntityInfo{DbFQName = "[Media].[UpdateTrack]", Props = new Dictionary<int, PropertyInfo>(9){{(int)MainDbE.Media.UpdateTrack_RequestProperty.TrackId, new PropertyInfo{ ParamName = "@TrackId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateTrack_RequestProperty.Name, new PropertyInfo{ ParamName = "@Name", SqlType = SqlDbType.NVarChar, Size = 200,}},{(int)MainDbE.Media.UpdateTrack_RequestProperty.AlbumId, new PropertyInfo{ ParamName = "@AlbumId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateTrack_RequestProperty.MediaTypeId, new PropertyInfo{ ParamName = "@MediaTypeId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateTrack_RequestProperty.GenreId, new PropertyInfo{ ParamName = "@GenreId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateTrack_RequestProperty.Composer, new PropertyInfo{ ParamName = "@Composer", SqlType = SqlDbType.NVarChar, Size = 220,}},{(int)MainDbE.Media.UpdateTrack_RequestProperty.Milliseconds, new PropertyInfo{ ParamName = "@Milliseconds", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateTrack_RequestProperty.Bytes, new PropertyInfo{ ParamName = "@Bytes", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.Media.UpdateTrack_RequestProperty.UnitPrice, new PropertyInfo{ ParamName = "@UnitPrice", SqlType = SqlDbType.Decimal, Size = null,}},},}},
            {StoredProcId.MainDb_People_CheckCustomer, new EntityInfo{DbFQName = "[People].[CheckCustomer]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.People.CheckCustomer_RequestProperty.CustomerId, new PropertyInfo{ ParamName = "@CustomerId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_CheckEmployee, new EntityInfo{DbFQName = "[People].[CheckEmployee]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.People.CheckEmployee_RequestProperty.EmployeeId, new PropertyInfo{ ParamName = "@EmployeeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_DeleteCustomer, new EntityInfo{DbFQName = "[People].[DeleteCustomer]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.People.DeleteCustomer_RequestProperty.CustomerId, new PropertyInfo{ ParamName = "@CustomerId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_DeleteEmployee, new EntityInfo{DbFQName = "[People].[DeleteEmployee]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.People.DeleteEmployee_RequestProperty.EmployeeId, new PropertyInfo{ ParamName = "@EmployeeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_GetAllCustomers, new EntityInfo{DbFQName = "[People].[GetAllCustomers]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_People_GetAllEmployees, new EntityInfo{DbFQName = "[People].[GetAllEmployees]", Props = new Dictionary<int, PropertyInfo>(0),}},
            {StoredProcId.MainDb_People_GetCustomer, new EntityInfo{DbFQName = "[People].[GetCustomer]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.People.GetCustomer_RequestProperty.CustomerId, new PropertyInfo{ ParamName = "@CustomerId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_GetCustomersBySupportRep, new EntityInfo{DbFQName = "[People].[GetCustomersBySupportRep]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.People.GetCustomersBySupportRep_RequestProperty.SupportRepId, new PropertyInfo{ ParamName = "@SupportRepId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_GetEmployee, new EntityInfo{DbFQName = "[People].[GetEmployee]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.People.GetEmployee_RequestProperty.EmployeeId, new PropertyInfo{ ParamName = "@EmployeeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_GetEmployeeReportsTo, new EntityInfo{DbFQName = "[People].[GetEmployeeReportsTo]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.People.GetEmployeeReportsTo_RequestProperty.EmployeeId, new PropertyInfo{ ParamName = "@EmployeeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_GetEmployeesByReportsTo, new EntityInfo{DbFQName = "[People].[GetEmployeesByReportsTo]", Props = new Dictionary<int, PropertyInfo>(1){{(int)MainDbE.People.GetEmployeesByReportsTo_RequestProperty.EmployeeId, new PropertyInfo{ ParamName = "@EmployeeId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_InsertCustomer, new EntityInfo{DbFQName = "[People].[InsertCustomer]", Props = new Dictionary<int, PropertyInfo>(13){{(int)MainDbE.People.InsertCustomer_RequestProperty.FirstName, new PropertyInfo{ ParamName = "@FirstName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.LastName, new PropertyInfo{ ParamName = "@LastName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.Company, new PropertyInfo{ ParamName = "@Company", SqlType = SqlDbType.NVarChar, Size = 80,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.Address, new PropertyInfo{ ParamName = "@Address", SqlType = SqlDbType.NVarChar, Size = 70,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.City, new PropertyInfo{ ParamName = "@City", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.State, new PropertyInfo{ ParamName = "@State", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.Country, new PropertyInfo{ ParamName = "@Country", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.PostalCode, new PropertyInfo{ ParamName = "@PostalCode", SqlType = SqlDbType.NVarChar, Size = 10,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.Phone, new PropertyInfo{ ParamName = "@Phone", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.Fax, new PropertyInfo{ ParamName = "@Fax", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.Email, new PropertyInfo{ ParamName = "@Email", SqlType = SqlDbType.NVarChar, Size = 60,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.SupportRepId, new PropertyInfo{ ParamName = "@SupportRepId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.People.InsertCustomer_RequestProperty.CustomerId, new PropertyInfo{ ParamName = "@CustomerId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_People_InsertEmployee, new EntityInfo{DbFQName = "[People].[InsertEmployee]", Props = new Dictionary<int, PropertyInfo>(15){{(int)MainDbE.People.InsertEmployee_RequestProperty.LastName, new PropertyInfo{ ParamName = "@LastName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.FirstName, new PropertyInfo{ ParamName = "@FirstName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.Title, new PropertyInfo{ ParamName = "@Title", SqlType = SqlDbType.NVarChar, Size = 30,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.ReportsTo, new PropertyInfo{ ParamName = "@ReportsTo", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.BirthDate, new PropertyInfo{ ParamName = "@BirthDate", SqlType = SqlDbType.DateTime, Size = null,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.HireDate, new PropertyInfo{ ParamName = "@HireDate", SqlType = SqlDbType.DateTime, Size = null,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.Address, new PropertyInfo{ ParamName = "@Address", SqlType = SqlDbType.NVarChar, Size = 70,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.City, new PropertyInfo{ ParamName = "@City", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.State, new PropertyInfo{ ParamName = "@State", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.Country, new PropertyInfo{ ParamName = "@Country", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.PostalCode, new PropertyInfo{ ParamName = "@PostalCode", SqlType = SqlDbType.NVarChar, Size = 10,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.Phone, new PropertyInfo{ ParamName = "@Phone", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.Fax, new PropertyInfo{ ParamName = "@Fax", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.Email, new PropertyInfo{ ParamName = "@Email", SqlType = SqlDbType.NVarChar, Size = 60,}},{(int)MainDbE.People.InsertEmployee_RequestProperty.EmployeeId, new PropertyInfo{ ParamName = "@EmployeeId", SqlType = SqlDbType.Int, Size = null, Direction = ParameterDirection.InputOutput,}},},}},
            {StoredProcId.MainDb_People_UpdateCustomer, new EntityInfo{DbFQName = "[People].[UpdateCustomer]", Props = new Dictionary<int, PropertyInfo>(13){{(int)MainDbE.People.UpdateCustomer_RequestProperty.CustomerId, new PropertyInfo{ ParamName = "@CustomerId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.FirstName, new PropertyInfo{ ParamName = "@FirstName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.LastName, new PropertyInfo{ ParamName = "@LastName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.Company, new PropertyInfo{ ParamName = "@Company", SqlType = SqlDbType.NVarChar, Size = 80,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.Address, new PropertyInfo{ ParamName = "@Address", SqlType = SqlDbType.NVarChar, Size = 70,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.City, new PropertyInfo{ ParamName = "@City", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.State, new PropertyInfo{ ParamName = "@State", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.Country, new PropertyInfo{ ParamName = "@Country", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.PostalCode, new PropertyInfo{ ParamName = "@PostalCode", SqlType = SqlDbType.NVarChar, Size = 10,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.Phone, new PropertyInfo{ ParamName = "@Phone", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.Fax, new PropertyInfo{ ParamName = "@Fax", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.Email, new PropertyInfo{ ParamName = "@Email", SqlType = SqlDbType.NVarChar, Size = 60,}},{(int)MainDbE.People.UpdateCustomer_RequestProperty.SupportRepId, new PropertyInfo{ ParamName = "@SupportRepId", SqlType = SqlDbType.Int, Size = null,}},},}},
            {StoredProcId.MainDb_People_UpdateEmployee, new EntityInfo{DbFQName = "[People].[UpdateEmployee]", Props = new Dictionary<int, PropertyInfo>(15){{(int)MainDbE.People.UpdateEmployee_RequestProperty.EmployeeId, new PropertyInfo{ ParamName = "@EmployeeId", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.LastName, new PropertyInfo{ ParamName = "@LastName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.FirstName, new PropertyInfo{ ParamName = "@FirstName", SqlType = SqlDbType.NVarChar, Size = 20,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.Title, new PropertyInfo{ ParamName = "@Title", SqlType = SqlDbType.NVarChar, Size = 30,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.ReportsTo, new PropertyInfo{ ParamName = "@ReportsTo", SqlType = SqlDbType.Int, Size = null,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.BirthDate, new PropertyInfo{ ParamName = "@BirthDate", SqlType = SqlDbType.DateTime, Size = null,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.HireDate, new PropertyInfo{ ParamName = "@HireDate", SqlType = SqlDbType.DateTime, Size = null,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.Address, new PropertyInfo{ ParamName = "@Address", SqlType = SqlDbType.NVarChar, Size = 70,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.City, new PropertyInfo{ ParamName = "@City", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.State, new PropertyInfo{ ParamName = "@State", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.Country, new PropertyInfo{ ParamName = "@Country", SqlType = SqlDbType.NVarChar, Size = 40,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.PostalCode, new PropertyInfo{ ParamName = "@PostalCode", SqlType = SqlDbType.NVarChar, Size = 10,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.Phone, new PropertyInfo{ ParamName = "@Phone", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.Fax, new PropertyInfo{ ParamName = "@Fax", SqlType = SqlDbType.NVarChar, Size = 24,}},{(int)MainDbE.People.UpdateEmployee_RequestProperty.Email, new PropertyInfo{ ParamName = "@Email", SqlType = SqlDbType.NVarChar, Size = 60,}},},}},
        };
        #endregion
        #region Functions
        //this is the info necesary for Sql query composition. It is public so the repositories can interact with each other.
        public static readonly Dictionary<int, EntityInfo> Functions = new Dictionary<int, EntityInfo>(0)
        {
        };
        #endregion
        #region Sequences
        //this is the info necesary for Sql query composition. It is public so the repositories can interact with each other.
        public static readonly Dictionary<int, EntityInfo> Sequences = new Dictionary<int, EntityInfo>(0)
        {
        };
        #endregion
    }
}
